# This is a basic workflow to help you get started with Actions

name: Archive

# Controls when the workflow will run
on:
  push:
    branches:
    - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  archive:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Copy this step to checkout all individual repos to ./src/reponame
      # you should change the 'name', 'repository' and 'path'
      # also check the `ref` for the correct branch
      - name: Checkout source repo world-direct/technology
        uses: actions/checkout@v4.1.5
        with:
          repository: world-direct/technology
          ref: refs/heads/main
          token: ${{ secrets.USER_PAT }}
          path: ./repos/world-direct/technology

      - name: Checkout source repo world-direct/suss
        uses: actions/checkout@v4.1.5
        with:
          repository: world-direct/suss
          ref: refs/heads/main
          token: ${{ secrets.USER_PAT }}
          path: ./repos/world-direct/suss

      - name: Checkout destination repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.DESTINATION_REPO }}
          ssh-key: ${{ secrets.DESTINATION_REPO_SSH_KEY }}
          path: ./dest

      - name: Create source archive, output file list to src.lst
        run: tar -czvf src.tar.gz ./repos | tee src.lst
        
      - name: Import GPG key
        env:
          GPG_PUBLIC_KEY : ${{ secrets.GPG_PUBLIC_KEY }}
          GPG_EMAIL: ${{ secrets.GPG_EMAIL }}
        run: echo -e "$GPG_PUBLIC_KEY" | gpg --import

      - name: Encrypt src.tar.gz to src.tar.gz.enc
        env:
          GPG_PUBLIC_KEY : ${{ secrets.GPG_PUBLIC_KEY }}
          GPG_EMAIL: ${{ secrets.GPG_EMAIL }}
        run: gpg --output ./src.tar.gz.enc --encrypt --recipient $GPG_EMAIL --trust-model always ./src.tar.gz

      - name: test
        run: ls . && ls ./dest
